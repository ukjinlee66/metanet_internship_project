{"ast":null,"code":"var _jsxFileName = \"/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/Tourinfoitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tourinfoitem(props) {\n  _s();\n\n  // 상세 페이지 출력 관광지 정보 \n  const [tourSpot, setTourSpot] = useState({\n    tag_prev: '',\n    content: '',\n    detail_content: '',\n    location: {\n      type: '',\n      coordinates: ['', '']\n    }\n  });\n  const [nearTour, setNearTour] = useState({\n    id: '',\n    source: '',\n    location: {\n      type: '',\n      coordinates: ['', '']\n    }\n  });\n  const reqUrl = '/source/lookup';\n  const reqUrl2 = '/map/findNear';\n  const mapLoction = []; // 한 관광지에 대한 상세정보 요청\n\n  const getInfoItem = async () => {\n    await axios.get(reqUrl, {\n      params: {\n        id: decodeURI(window.location.search.split('=')[1])\n      }\n    }).then(res => getTourNear(res.data));\n  };\n\n  const getTourNear = async tourInfo => {\n    await axios.get(reqUrl2, {\n      params: {\n        longitude: tourInfo.location.coordinates[0],\n        latitude: tourInfo.location.coordinates[1],\n        distance: 2\n      }\n    }).then(res => setNearTour(res.data), setTourSpot(tourInfo));\n  }; // 처음 렌더링시 한번 실행되는 함수\n\n\n  useEffect(() => {\n    getInfoItem();\n  }, []); // 상세페이지 관광지 정보 렌더링\n\n  const tourSpotRender = () => {\n    const result = [];\n    result.push( /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"h4\",\n          children: \"\\uC0C1\\uC138\\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tourSpot.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this));\n\n    for (let i = 0; i < nearTour.length; i++) {\n      if (i == 5) {\n        break;\n      }\n\n      mapLoction.push(nearTour[i].source.replace(/,/g, '@'));\n      mapLoction.push(nearTour[i].location.coordinates);\n    }\n\n    sessionStorage.setItem(\"info_arr\", mapLoction);\n\n    if (mapLoction[0] != undefined) {\n      const script = document.createElement(\"script\");\n      script.innerHTML = `\n                var map;\n                let info_arr = [\"관광지1\",[126.51555, 33.5200],\"관광지2\",[126.50235, 33.5030],\"관광지3\",[126.49235, 33.5030],\"관광지4\",[126.48235, 33.5030]];\n                info_arr = sessionStorage.getItem(\"info_arr\");\n                info_arr = info_arr.split(',');\n                function initTmap() \n                {\n                var lat;\n                var lng;\n                \n                map = new Tmapv2.Map(\"TMapApp\", {\n                    center: new Tmapv2.LatLng(33.4000,126.51555),\n                    width: \"100%\",\n                    height: \"60%\",\n                    zoom:10\n                });\n                let cnt = 1;\n                for(let i = 0; i < info_arr.length;i+=3){\n                    let str=\"\";\n                    let marker;\n                    let title1 = info_arr[i].replace(/@/g, ',');\n                    let label=\"<span style='background-color: #46414E;color:white'>\"+info_arr[i].replace(/@/g, ',')+\"</span>\";\n                    //Marker 객체 생성.\n                    lat = info_arr[i+2];\n                    lng = info_arr[i+1];\n                    marker = new Tmapv2.Marker({\n                        position: new Tmapv2.LatLng(parseFloat(lat), parseFloat(lng)), //Marker의 중심좌표 설정.\n                        title: title1,\n                        label: label\n                    });\n                    marker.setMap(map); //Marker가 표시될 Map 설정.\n                    lat = info_arr[i+2];\n                    lng = info_arr[i+1] + \" \" + lat;\n                    str = '<button class=\"col-md-2 btnImages\" style=\"width:30px; height:30px;\" value=\"'+lng+'\" type=\"button\" onclick=\"center_map(this.value);return false;\"><i class=\"bi bi-geo-alt\"/></button>';\n                    $(\"#btn\"+String(cnt)).html(str);\n                    cnt+=1;\n                    }\n                }\n                //onclick function\n                function center_map(name)\n                {\n                let temp = name.split(\" \");\n                let lonlat =  new Tmapv2.LatLng(parseFloat(temp[1]), parseFloat(temp[0]));\n                map.setCenter(lonlat);\n                map.setZoom(12);\n                }\n                initTmap();\n            `;\n      script.type = \"text/javascript\";\n      script.async = \"async\";\n      document.head.appendChild(script);\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: tourSpotRender()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tourinfoitem, \"8wgem9CYCkGCFtcjdnI65k61Yqo=\");\n\n_c = Tourinfoitem;\nexport default Tourinfoitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tourinfoitem\");","map":{"version":3,"sources":["/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/Tourinfoitem.js"],"names":["React","Fragment","useEffect","useState","axios","Tourinfoitem","props","tourSpot","setTourSpot","tag_prev","content","detail_content","location","type","coordinates","nearTour","setNearTour","id","source","reqUrl","reqUrl2","mapLoction","getInfoItem","get","params","decodeURI","window","search","split","then","res","getTourNear","data","tourInfo","longitude","latitude","distance","tourSpotRender","result","push","i","length","replace","sessionStorage","setItem","undefined","script","document","createElement","innerHTML","async","head","appendChild"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport axios from \"axios\";\n\nfunction Tourinfoitem(props) {\n\n    // 상세 페이지 출력 관광지 정보 \n    const [tourSpot, setTourSpot] = useState({tag_prev:'', content:'', detail_content:'', location:{type:'', coordinates:['','']}})\n    const [nearTour, setNearTour] = useState({id:'', source:'', location:{type:'',coordinates:['','']}})\n\n    const reqUrl = '/source/lookup';\n    const reqUrl2 = '/map/findNear';\n\n    const mapLoction = [];\n\n    // 한 관광지에 대한 상세정보 요청\n    const getInfoItem = async () => {\n        await axios\n            .get(reqUrl, {\n                params: {\n                    id: decodeURI(window.location.search.split('=')[1])\n                }\n            })\n            .then((res) => getTourNear(res.data));\n    }\n\n    const getTourNear = async (tourInfo) =>{\n        await axios\n            .get(reqUrl2, {\n                params: {\n                    longitude: tourInfo.location.coordinates[0],\n                    latitude: tourInfo.location.coordinates[1],\n                    distance: 2\n                }\n            })\n            .then((res) => setNearTour(res.data),\n                setTourSpot(tourInfo)\n            );\n    }\n\n    // 처음 렌더링시 한번 실행되는 함수\n    useEffect(() => {\n        getInfoItem();\n    }, [])\n\n    // 상세페이지 관광지 정보 렌더링\n    const tourSpotRender = () => {\n        const result = [];\n        result.push(\n            <Fragment>\n            <div class=\"mb-5\">\n                <p class=\"h4\">상세정보</p>\n                <p>{tourSpot.content}</p>\n            </div>\n            </Fragment>\n        );\n        for (let i = 0; i < nearTour.length; i++) {\n            if (i == 5){\n                break\n            }\n            mapLoction.push(nearTour[i].source.replace(/,/g, '@'))\n            mapLoction.push(nearTour[i].location.coordinates)\n        }\n        sessionStorage.setItem(\"info_arr\", mapLoction)\n\n        if (mapLoction[0] != undefined){\n            const script = document.createElement(\"script\");\n            script.innerHTML = `\n                var map;\n                let info_arr = [\"관광지1\",[126.51555, 33.5200],\"관광지2\",[126.50235, 33.5030],\"관광지3\",[126.49235, 33.5030],\"관광지4\",[126.48235, 33.5030]];\n                info_arr = sessionStorage.getItem(\"info_arr\");\n                info_arr = info_arr.split(',');\n                function initTmap() \n                {\n                var lat;\n                var lng;\n                \n                map = new Tmapv2.Map(\"TMapApp\", {\n                    center: new Tmapv2.LatLng(33.4000,126.51555),\n                    width: \"100%\",\n                    height: \"60%\",\n                    zoom:10\n                });\n                let cnt = 1;\n                for(let i = 0; i < info_arr.length;i+=3){\n                    let str=\"\";\n                    let marker;\n                    let title1 = info_arr[i].replace(/@/g, ',');\n                    let label=\"<span style='background-color: #46414E;color:white'>\"+info_arr[i].replace(/@/g, ',')+\"</span>\";\n                    //Marker 객체 생성.\n                    lat = info_arr[i+2];\n                    lng = info_arr[i+1];\n                    marker = new Tmapv2.Marker({\n                        position: new Tmapv2.LatLng(parseFloat(lat), parseFloat(lng)), //Marker의 중심좌표 설정.\n                        title: title1,\n                        label: label\n                    });\n                    marker.setMap(map); //Marker가 표시될 Map 설정.\n                    lat = info_arr[i+2];\n                    lng = info_arr[i+1] + \" \" + lat;\n                    str = '<button class=\"col-md-2 btnImages\" style=\"width:30px; height:30px;\" value=\"'+lng+'\" type=\"button\" onclick=\"center_map(this.value);return false;\"><i class=\"bi bi-geo-alt\"/></button>';\n                    $(\"#btn\"+String(cnt)).html(str);\n                    cnt+=1;\n                    }\n                }\n                //onclick function\n                function center_map(name)\n                {\n                let temp = name.split(\" \");\n                let lonlat =  new Tmapv2.LatLng(parseFloat(temp[1]), parseFloat(temp[0]));\n                map.setCenter(lonlat);\n                map.setZoom(12);\n                }\n                initTmap();\n            `;\n            script.type = \"text/javascript\";\n            script.async = \"async\";\n            document.head.appendChild(script);\n        }\n        return result;\n    };\n\n\n    return (\n        <Fragment>\n            {tourSpotRender()}\n        </Fragment>\n    );\n}\n\nexport default Tourinfoitem;"]},"metadata":{},"sourceType":"module"}