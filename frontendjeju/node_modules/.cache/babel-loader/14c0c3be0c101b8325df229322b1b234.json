{"ast":null,"code":"var _jsxFileName = \"/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/ReturnTour.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReturnTour(props) {\n  _s();\n\n  const [tourInfo, setTourInfo] = useState([{\n    id: '',\n    img: '',\n    source: '',\n    sub_title: ''\n  }]);\n  const infoUrl = '/source/searchBySource';\n  const reqUrl = '/recommend/chatbot';\n  const elasticUrl = '/log/searchKeyword'; // 유저가 입력한 정보를 통해서 KoBERT 기반 추천 요청\n\n  const getRecoTour = async sentences => {\n    await axios.get(reqUrl, {\n      params: {\n        sentence: sentences\n      }\n    }).then(res => getInfoTour(res.data));\n  };\n\n  const getInfoTour = async tourSpot => {\n    await axios.get(infoUrl, {\n      params: {\n        source: tourSpot\n      }\n    }).then(res => setTourInfo(res.data));\n  }; // elasticSearch에 챗봇 추천 log데이터 통신\n\n\n  const insertElastic = async searchWord => {\n    await axios.get(elasticUrl, {\n      params: {\n        search: searchWord,\n        logClass: 'chatbotLog'\n      }\n    }).then();\n  }; // 처음 렌더링시 한번 실행되는 함수\n\n\n  useEffect(() => {\n    getRecoTour(props.steps[1].value);\n    insertElastic(props.steps[1].value);\n  }, []);\n\n  const output = () => {\n    let result;\n\n    if (tourInfo[0].id == '') {\n      result = /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this);\n    } else {\n      result = /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"chatbot-btn\",\n        onClick: e => window.location.href = \"/jeju/TouristAttractionInfo?tourSpot=\" + tourInfo[0].id,\n        children: tourInfo[0].source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this);\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: output()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReturnTour, \"UKFs3kghvc3vb4wukmHvPoBiPN0=\");\n\n_c = ReturnTour;\nexport default ReturnTour;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnTour\");","map":{"version":3,"sources":["/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/ReturnTour.js"],"names":["React","useState","useEffect","axios","ReturnTour","props","tourInfo","setTourInfo","id","img","source","sub_title","infoUrl","reqUrl","elasticUrl","getRecoTour","sentences","get","params","sentence","then","res","getInfoTour","data","tourSpot","insertElastic","searchWord","search","logClass","steps","value","output","result","e","window","location","href"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kCAAP;AACA,OAAO,iCAAP;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CACrC;AAACO,IAAAA,EAAE,EAAC,EAAJ;AAAQC,IAAAA,GAAG,EAAC,EAAZ;AAAgBC,IAAAA,MAAM,EAAC,EAAvB;AAA2BC,IAAAA,SAAS,EAAC;AAArC,GADqC,CAAD,CAAxC;AAGA,QAAMC,OAAO,GAAG,wBAAhB;AACA,QAAMC,MAAM,GAAG,oBAAf;AACA,QAAMC,UAAU,GAAG,oBAAnB,CAPuB,CASvB;;AACA,QAAMC,WAAW,GAAG,MAAOC,SAAP,IAAqB;AACrC,UAAMb,KAAK,CACNc,GADC,CACGJ,MADH,EACW;AACTK,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEH;AADN;AADC,KADX,EAMDI,IANC,CAMKC,GAAD,IAASC,WAAW,CAACD,GAAG,CAACE,IAAL,CANxB,CAAN;AAOH,GARD;;AAUA,QAAMD,WAAW,GAAG,MAAOE,QAAP,IAAoB;AACpC,UAAMrB,KAAK,CACNc,GADC,CACGL,OADH,EACY;AACVM,MAAAA,MAAM,EAAE;AACJR,QAAAA,MAAM,EAAEc;AADJ;AADE,KADZ,EAMDJ,IANC,CAMKC,GAAD,IAASd,WAAW,CAACc,GAAG,CAACE,IAAL,CANxB,CAAN;AAOH,GARD,CApBuB,CA8BvB;;;AACA,QAAME,aAAa,GAAG,MAAOC,UAAP,IAAsB;AACxC,UAAMvB,KAAK,CACNc,GADC,CACGH,UADH,EACe;AACbI,MAAAA,MAAM,EAAC;AACHS,QAAAA,MAAM,EAAED,UADL;AAEHE,QAAAA,QAAQ,EAAE;AAFP;AADM,KADf,EAODR,IAPC,EAAN;AAQH,GATD,CA/BuB,CA0CvB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW,CAACV,KAAK,CAACwB,KAAN,CAAY,CAAZ,EAAeC,KAAhB,CAAX;AACAL,IAAAA,aAAa,CAACpB,KAAK,CAACwB,KAAN,CAAY,CAAZ,EAAeC,KAAhB,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAIC,MAAJ;;AACA,QAAI1B,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAZ,IAAkB,EAAtB,EAA0B;AACtBwB,MAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAFD,MAEO;AACHA,MAAAA,MAAM,gBAAG;AAAG,QAAA,SAAS,EAAC,aAAb;AAA2B,QAAA,OAAO,EAAGC,CAAD,IAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,0CAA0C9B,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAxH;AAAA,kBAA6HF,QAAQ,CAAC,CAAD,CAAR,CAAYI;AAAzI;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AACL,WAAOsB,MAAP;AACC,GARD;;AAUA,sBACI;AAAA,cACKD,MAAM;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/DQ3B,U;;KAAAA,U;AAiET,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport axios from \"axios\";\n\nfunction ReturnTour(props) {\n\n    const [tourInfo, setTourInfo] = useState([\n        {id:'' ,img:'', source:'', sub_title:''}])\n\n    const infoUrl = '/source/searchBySource'\n    const reqUrl = '/recommend/chatbot';\n    const elasticUrl = '/log/searchKeyword'\n    \n    // 유저가 입력한 정보를 통해서 KoBERT 기반 추천 요청\n    const getRecoTour = async (sentences) => {\n        await axios\n            .get(reqUrl, {\n                params: {\n                    sentence: sentences,\n                }\n            })\n            .then((res) => getInfoTour(res.data));  \n    }\n\n    const getInfoTour = async (tourSpot) => {\n        await axios\n            .get(infoUrl, {\n                params: {\n                    source: tourSpot,\n                }\n            })\n            .then((res) => setTourInfo(res.data));  \n    }\n\n    // elasticSearch에 챗봇 추천 log데이터 통신\n    const insertElastic = async (searchWord) => {\n        await axios\n            .get(elasticUrl, {\n                params:{\n                    search: searchWord,\n                    logClass: 'chatbotLog'\n                }\n            })\n            .then();\n    }\n\n    // 처음 렌더링시 한번 실행되는 함수\n    useEffect(() => {\n        getRecoTour(props.steps[1].value)\n        insertElastic(props.steps[1].value)\n    }, [])\n\n    const output = () => {\n        let result;\n        if (tourInfo[0].id == '') {\n            result = <a>loading...</a>; \n        } else {\n            result = <a className='chatbot-btn' onClick={(e) => window.location.href = \"/jeju/TouristAttractionInfo?tourSpot=\" + tourInfo[0].id}>{tourInfo[0].source}</a>;\n        } \n    return result;\n    };\n\n    return (\n        <div>\n            {output()}\n        </div>\n    );\n}\n\nexport default ReturnTour;"]},"metadata":{},"sourceType":"module"}