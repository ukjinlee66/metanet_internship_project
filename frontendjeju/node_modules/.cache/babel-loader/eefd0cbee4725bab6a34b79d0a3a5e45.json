{"ast":null,"code":"var _jsxFileName = \"/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/MapInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react'; //import ReactDOM from \"react-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport closebutton from '../assets/img/close-button.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapInfo() {\n  _s();\n\n  const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장 \n  // useRef를 통해 css 변경\n\n  const stickyChange = useRef(null);\n\n  function handleScroll() {\n    setScrollY(window.pageYOffset);\n\n    if (ScrollY > 300) {\n      stickyChange.current.style.top = '75px';\n    } else {\n      stickyChange.current.style.top = '-100px';\n    }\n  }\n\n  useEffect(() => {\n    function scrollListener() {\n      window.addEventListener(\"scroll\", handleScroll);\n    } //  window 에서 스크롤을 감시 시작\n\n\n    scrollListener(); // window 에서 스크롤을 감시\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }; //  window 에서 스크롤을 감시를 종료\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"col-lg-7\",\n    style: {\n      paddingRight: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"TMapApp\",\n      style: {\n        position: 'sticky'\n      },\n      ref: stickyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapInfo, \"1sESoNzAcwKNpGOwYy0mgQn6BWY=\");\n\n_c = MapInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapInfo\");","map":{"version":3,"sources":["/Users/youlee/Desktop/metanet_internship_project/frontendjeju/src/components/MapInfo.js"],"names":["React","useEffect","useState","useRef","closebutton","MapInfo","ScrollY","setScrollY","stickyChange","handleScroll","window","pageYOffset","current","style","top","scrollListener","addEventListener","removeEventListener","paddingRight","position"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;;AACA,OAAO,kCAAP;AACA,OAAO,iCAAP;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,eAAe,SAASC,OAAT,GACf;AAAA;;AACE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC,CADF,CAC6C;AAE3C;;AACA,QAAMM,YAAY,GAAGL,MAAM,CAAC,IAAD,CAA3B;;AAEA,WAASM,YAAT,GAAwB;AACpBF,IAAAA,UAAU,CAACG,MAAM,CAACC,WAAR,CAAV;;AACA,QAAGL,OAAO,GAAG,GAAb,EAAkB;AACdE,MAAAA,YAAY,CAACI,OAAb,CAAqBC,KAArB,CAA2BC,GAA3B,GAAiC,MAAjC;AACH,KAFD,MAEO;AACHN,MAAAA,YAAY,CAACI,OAAb,CAAqBC,KAArB,CAA2BC,GAA3B,GAAiC,QAAjC;AACH;AACJ;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASc,cAAT,GAA0B;AAAGL,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,YAAlC;AAAkD,KADnE,CACoE;;;AAChFM,IAAAA,cAAc,GAFF,CAEM;;AAClB,WAAO,MAAM;AAAEL,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,YAArC;AAAqD,KAApE,CAHY,CAG0D;AACzE,GAJQ,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAsB,IAAA,KAAK,EAAE;AAACS,MAAAA,YAAY,EAAC;AAAd,KAA7B;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAzB;AAA8C,MAAA,GAAG,EAAEX;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3BuBH,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n//import ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\nimport closebutton from '../assets/img/close-button.png'\n\nexport default function MapInfo() \n{ \n  const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장 \n\n  // useRef를 통해 css 변경\n  const stickyChange = useRef(null);\n  \n  function handleScroll() { \n      setScrollY(window.pageYOffset);\n      if(ScrollY > 300) {\n          stickyChange.current.style.top = '75px';\n      } else {\n          stickyChange.current.style.top = '-100px';\n      }\n  }\n\n  useEffect(() => {\n      function scrollListener() {  window.addEventListener(\"scroll\", handleScroll); } //  window 에서 스크롤을 감시 시작\n      scrollListener(); // window 에서 스크롤을 감시\n      return () => { window.removeEventListener(\"scroll\", handleScroll); }; //  window 에서 스크롤을 감시를 종료\n  });\n\n  return (\n    <div class=\"col-lg-7\" style={{paddingRight:0}}>\n        <div id=\"TMapApp\" style={{position:'sticky'}} ref={stickyChange}></div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}